angular.module("sample",["ngRoute","ui.bootstrap","http-auth-interceptor","ng.httpLoader","ml.common","ml.search","ml.search.tpls","google-maps"]).config(["$routeProvider","$locationProvider","mlMapsProvider",function(r,t){"use strict";t.html5Mode(!0),r.when("/",{templateUrl:"/home/splash.html",controller:"SplashCtrl"}).when("/login",{templateUrl:"/user/login.html",controller:"LoginCtrl"}).when("/user1/dashboard",{templateUrl:"/user1/dashboard.html",controller:"User1DashboardCtrl"}).when("/user2/dashboard",{templateUrl:"/user2/dashboard.html",controller:"User2DashboardCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("sample.common",[]).filter("object2Array",function(){"use strict";return function(r){var t=[];for(var e in r)r[e].__key=e,t.push(r[e]);return t}}),function(){"use strict";angular.module("sample.common").factory("MLSampleQueryBuilder",[function(){var r=function(){return 1===arguments.length&&angular.isArray(arguments[0])?{"and-query":{queries:arguments[0]}}:{"and-query":{queries:Array.prototype.slice.call(arguments)}}};return{andQuery:r,boostQuery:function(t,e){return t?{"boost-query":{"matching-query":t,"boosting-query":e}}:{"boost-query":{"matching-query":r(),"boosting-query":e}}},collectionConstraintQuery:function(r,t){return{"collection-constraint-query":{"constraint-name":r,uri:Array.isArray(t)?t:[t]}}},customConstraintQuery:function(r,t){return{"custom-constraint-query":{"constraint-name":r,text:t}}},customGeospatialConstraintQuery:function(r,t,e){return{"custom-constraint-query":{"constraint-name":r,annotation:t,box:e}}},documentQuery:function(r){return{"document-query":{uri:Array.isArray(r)?r:[r]}}},geospatialConstraintQuery:function(r,t){return{"geospatial-constraint-query":{"constraint-name":r,box:t}}},operatorState:function(r,t){return{"operator-state":{"operator-name":r,"state-name":t}}},orQuery:function(){return 1===arguments.length&&angular.isArray(arguments[0])?{"or-query":{queries:arguments[0]}}:{"or-query":{queries:Array.prototype.slice.call(arguments)}}},propertiesQuery:function(r){return{"properties-query":r}},rangeConstraintQuery:function(r,t,e,n){return n||(n=[]),t||(t="EQ"),{"range-constraint-query":{"constraint-name":r,"range-operator":t,value:e,"range-option":n}}},structuredQuery:function(){return 1===arguments.length&&angular.isArray(arguments[0])?{query:{queries:arguments[0]}}:{query:{queries:Array.prototype.slice.call(arguments)}}},termQuery:function(r,t){return t?{"term-query":{text:r,weight:t}}:{"term-query":{text:r}}},textQuery:function(r){return{qtext:r}}}}])}();